#!/usr/bin/env bash
set -e

# If anything goes wrong, assume the latest release is newer
trap 'exit 0' ERR

which xmlstarlet &>/dev/null || { echo "$(basename $0): xmlstarlet not found"; exit 10; }
CREATEDAT_KEY="/MediaContainer/Release/@createdAt"

# Latest release, arguments $1 & $2
latestVer=$(xmlstarlet sel -t -v "$CREATEDAT_KEY" < $2 | sed -e 's/\sUTC//')
latestVerSecs=$(date -d "$latestVer" '+%s')
# Previous build, arguments $3 & $4
lastBuild=$(xmlstarlet sel -t -v "$CREATEDAT_KEY" < $4 | sed -e 's/\sUTC//')
lastBuildSecs=$(date -d "$lastBuild" '+%s')

# Check if the remote version is newer than the last build
# Below will return true if newest release is actually newer & update should commence
[ "$latestVerSecs" -gt "$lastBuildSecs" ] && exit 0 || exit 255
